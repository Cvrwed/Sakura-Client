package cc.unknown.module.impl.exploit;

import cc.unknown.event.Listener;
import cc.unknown.event.annotations.EventLink;
import cc.unknown.event.impl.input.MoveInputEvent;
import cc.unknown.event.impl.netty.PacketEvent;
import cc.unknown.event.impl.player.PreMotionEvent;
import cc.unknown.event.impl.player.PreStrafeEvent;
import cc.unknown.module.Module;
import cc.unknown.module.api.Category;
import cc.unknown.module.api.ModuleInfo;
import cc.unknown.util.packet.PacketUtil;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C02PacketUseEntity;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.server.S2DPacketOpenWindow;

/**
 * @author Auth
 * @since 3/02/2022
 */

@ModuleInfo(aliases = "God Mode", description = "Prevents people from damaging you on some servers", category = Category.EXPLOIT)
public class GodMode extends Module {

	private float yaw;
	private float pitch;

	@EventLink
	public final Listener<PreMotionEvent> onPreMotionEvent = event -> {
		event.setPosY(event.getPosY() - 0.05);
		event.setYaw(yaw);
		event.setPitch(pitch);
	};

	@EventLink
	public final Listener<PacketEvent> onPacket = event -> {
		final Packet<?> p = event.getPacket();

		if (event.isSend()) {
			if (p instanceof C02PacketUseEntity) {
				final C02PacketUseEntity wrapper = (C02PacketUseEntity) p;
	
				if (wrapper.getAction().equals(C02PacketUseEntity.Action.ATTACK)) {
					event.setCancelled();
	
					PacketUtil.sendNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(mc.player.posX, mc.player.posY,
							mc.player.posZ, true));
					PacketUtil.sendNoEvent(wrapper);
					PacketUtil.sendNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(mc.player.posX,
							mc.player.posY - 0.05, mc.player.posZ, false));
				}
			}
		}
		
		if (event.isReceive()) {
			if (event.getPacket() instanceof S2DPacketOpenWindow) {
				event.setCancelled();
			}
		}
	};

	@EventLink
	public final Listener<PreStrafeEvent> onStrafe = event -> {
		event.setSpeed(0);
	};

	@EventLink
	public final Listener<MoveInputEvent> onMove = event -> {
		event.setJump(false);
	};

	@Override
	public void onEnable() {
		yaw = mc.player.rotationYaw;
		pitch = mc.player.rotationPitch;
	}
}